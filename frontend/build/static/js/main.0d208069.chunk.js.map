{"version":3,"sources":["office_icon.png","Navigation.js","JoblyApi.js","config.js","hooks/useDebounce.js","Searchbox.js","CompanyCard.js","CompanyList.js","Companies.js","userContext.js","JobCard.js","JobsList.js","hooks/useApply.js","Company.js","Home.js","SelectField.js","Pagination.js","hooks/usePagination.js","Jobs.js","Alert.js","Login.js","Profile.js","PrivateRoute.js","Applications.js","Routes.js","hooks/useLocalStorageState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","currentUser","logout","className","to","onClick","DATABASE_URL","JoblyApi","endpoint","paramsOrData","verb","_token","JSON","parse","localStorage","getItem","console","debug","axios","method","url","data","error","response","message","Array","isArray","this","request","res","token","username","user","handle","company","params","companies","id","job","jobs","state","useDebounce","func","delay","timerRef","useRef","args","current","clearTimeout","setTimeout","apply","Searchbox","filterResults","useState","term","setTerm","debouncedFilter","useEffect","onSubmit","e","preventDefault","type","name","value","placeholder","onChange","target","CompanyCard","description","logo_url","img","src","officeIcon","alt","CompanyList","map","idx","key","Companies","isLoading","setIsLoading","setCompanies","searchTerm","setSearchTerm","a","getCompanies","search","allCompanies","UserContext","React","createContext","JobCard","title","equity","salary","company_handle","unapply","appliedIds","useContext","includes","JobsList","useApply","setAppliedIds","applyToJob","ids","unApplyToJob","filter","num","Company","useParams","setCompany","getCompany","targetCompany","Home","SelectField","headDesc","tailDesc","options","action","subaction","opt","Pagination","page","goBack","goForward","aria-label","usePagination","perPage","items","setItems","setPage","resultsPerPage","setResultsPage","Math","max","min","ceil","length","Jobs","setJobs","setResultsPerPage","getJobs","slice","Alert","msgs","role","msg","Login","setToken","history","useHistory","isNewUser","setIsNewUser","password","first_name","last_name","email","errors","formData","setFormData","handleChange","handleSubmit","signup","login","push","htmlFor","Profile","setCurrentUser","updateUser","updatedUser","currUser","PrivateRoute","exact","path","children","Applications","Routes","useLocalStorageState","defaultValue","window","stringify","log","setState","setItem","removeItem","App","fetchUserDetails","decode","getUser","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,yC,qnBCiC5BC,G,OA5BI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OAoB9B,OACI,yBAAKC,UAAU,0DACX,kBAAC,IAAD,CAASA,UAAU,+BAA+BC,GAAG,KAArD,SACCH,EApBD,wBAAIE,UAAU,sBACV,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,cAAxC,cACzB,wBAAID,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,SAAxC,SACzB,wBAAID,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,YAAxC,YACzB,wBAAID,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,iBAAxC,oBACzB,wBAAID,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,IAAIC,QAASH,GAArD,YAM7B,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAASA,UAAU,kBAAkBC,GAAG,UAAxC,c,4CClBnCE,ECFS,CACXA,aAAa,uCDCWA,cAAgB,yBAkE7BC,E,8IA/DUC,G,8FAAUC,E,+BAAe,GAAIC,E,+BAAO,MACvDD,EAAaE,OAASC,KAAKC,MAAMC,aAAaC,QAAQ,UAEtDC,QAAQC,MAAM,YAAaT,EAAUC,EAAcC,G,kBAGnCQ,IAAM,aAClBC,OAAQT,EACRU,IAAI,GAAD,OAAKd,EAAL,YAAqBE,IACd,QAATE,EAAiB,SAAW,OAASD,I,uCAAgBY,M,wCAOxDL,QAAQM,MAAM,aAAc,KAAIC,UAC5BC,EAAU,KAAID,SAASF,KAAKG,QAC1BC,MAAMC,QAAQF,GAAWA,EAAU,CAACA,G,uLAG1BH,G,uFACAM,KAAKC,QAAL,QAAsBP,EAAM,Q,cAAxCQ,E,yBACGA,EAAIC,O,4KAEIT,G,uFACCM,KAAKC,QAAL,QAAsBP,EAAM,Q,cAAxCQ,E,yBACGA,EAAIC,O,8KAEMC,G,uFACDJ,KAAKC,QAAL,gBAAsBG,I,cAAlCF,E,yBACGA,EAAIG,M,iLAESD,EAAUV,G,uFACdM,KAAKC,QAAL,gBAAsBG,GAAYV,EAAM,S,cAApDQ,E,yBACGA,EAAIG,M,mLAESC,G,uFACNN,KAAKC,QAAL,oBAA0BK,I,cAAtCJ,E,yBACGA,EAAIK,S,iRAEaC,E,+BAAO,G,SACbR,KAAKC,QAAQ,YAAaO,G,cAAtCN,E,yBACGA,EAAIO,W,4KAEKC,G,uFACAV,KAAKC,QAAL,eAAqBS,I,cAAjCR,E,yBACGA,EAAIS,K,4QAEMH,E,+BAAO,G,SACRR,KAAKC,QAAQ,OAAQO,G,cAAjCN,E,yBACGA,EAAIU,M,gLAESF,G,uFACJV,KAAKC,QAAL,eAAqBS,EAArB,UAAiC,CAACG,MAAM,WAAY,Q,cAAhEX,E,yBACGA,EAAIL,S,mLAEWa,G,uFACNV,KAAKC,QAAL,eAAqBS,EAArB,UAAiC,GAAI,U,cAAjDR,E,yBACGA,EAAIL,S,qHElDJiB,G,OAbK,SAACC,GAAsB,IAAhBC,EAAe,uDAAT,IACvBC,EAAWC,mBAEjB,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBACZF,EAASG,SACTC,aAAaJ,EAASG,SAE1BH,EAASG,QAAUE,YAAW,WAC1BP,EAAKQ,MAAM,KAAMJ,KAClBH,MCmBIQ,EAzBG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAE7BC,EAAkBf,EAAYW,EAAe,KAYnD,OAJAK,qBAAU,WACND,EAAgBF,KAClB,CAACA,EAAME,IAGL,0BAAMrD,UAAU,6BAA6BuD,SAZ5B,SAACC,GAClBA,EAAEC,mBAYE,2BAAOzD,UAAU,2CACb0D,KAAK,SACLC,KAAK,SACLC,MAAOT,EACPU,YAAY,YACZC,SAfS,SAACN,GAClBJ,EAAQI,EAAEO,OAAOH,Y,kBCIVI,G,OAXK,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,YAAaN,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,SAC/BC,EAAM,yBAAKnE,UAAU,wBAAwBoE,IAAKF,GAAsBG,IAAYC,IAAKX,IAC/F,OACI,yBAAK3D,UAAU,6BACX,wBAAIA,UAAU,cAAc2D,GAC3BQ,EACD,uBAAGnE,UAAU,aAAaiE,MCUvBM,EAhBK,SAAC,GAAiB,IAAhBtC,EAAe,EAAfA,UAClB,OACI,wBAAIjC,UAAU,6BACTiC,EAAUuC,KAAI,WAAwCC,GAAxC,IAAER,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAUpC,EAAzB,EAAyBA,OAAQ6B,EAAjC,EAAiCA,KAAjC,OACf,wBAAIe,IAAKD,GACL,kBAAC,IAAD,CAAMxE,GAAE,qBAAgB6B,IACpB,kBAAC,EAAD,CACImC,YAAaA,EACbC,SAAUA,EACVP,KAAMA,WCiBfgB,EAzBG,WAAO,IAAD,EAEczB,oBAAS,GAFvB,mBAEb0B,EAFa,KAEFC,EAFE,OAGc3B,mBAAS,IAHvB,mBAGbjB,EAHa,KAGF6C,EAHE,OAIgB5B,mBAAS,IAJzB,mBAIb6B,EAJa,KAIDC,EAJC,KAapB,OARA1B,qBAAU,WAAM,4CACd,4BAAA2B,EAAA,sEAC2B7E,EAAS8E,aAAa,CAACC,OAAOJ,IADzD,OACMK,EADN,OAEEN,EAAaM,GAFf,4CADc,uBAAC,WAAD,wBAKdF,GACAL,GAAa,KACZ,CAACE,IACAH,EACK,6CAIL,yBAAK5E,UAAU,uBACX,kBAAC,EAAD,CAAWiD,cAAe+B,IAC1B,kBAAC,EAAD,CAAa/C,UAAWA,MCrBrBoD,EAFKC,IAAMC,gBCwBXC,EAtBC,SAAC,GAAiE,IAAhEtD,EAA+D,EAA/DA,GAAIuD,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,eAAgB7C,EAAoB,EAApBA,MAAO8C,EAAa,EAAbA,QACzDC,EAAcC,qBAAWV,GAAzBS,WAOP,OACI,yBAAK9F,UAAU,6BACX,wBAAIA,UAAU,cAAcyF,GAC3BG,EAAiB,wBAAI5F,UAAU,iCAAgC,kBAAC,IAAD,CAAMC,GAAE,qBAAgB2F,IAAxB,KAA6CA,EAA7C,MAA4E,KAC5I,uBAAG5F,UAAU,aACR2F,EAAS,yCAAeA,GAAiB,KAC1C,6BACCD,EAAS,yCAAeA,GAAiB,MAE7CI,EAAWE,SAAS9D,GAXlB,4BAAQlC,UAAU,yBAAyBE,QAAS,kBAAM2F,EAAQ3D,KAAlE,sBAHA,4BAAQlC,UAAU,0BAA0BE,QAAS,kBAAM6C,EAAMb,KAAjE,WCcA+D,EAlBE,SAAC,GAA4B,IAA3B7D,EAA0B,EAA1BA,KAAMW,EAAoB,EAApBA,MAAO8C,EAAa,EAAbA,QAC5B,OACI,wBAAI7F,UAAU,0BACToC,EAAKoC,KAAI,gBAAEtC,EAAF,EAAEA,GAAIuD,EAAN,EAAMA,MAAOE,EAAb,EAAaA,OAAQD,EAArB,EAAqBA,OAAQE,EAA7B,EAA6BA,eAA7B,OACV,wBAAIlB,IAAKxC,GACL,kBAAC,EAAD,CACIA,GAAIA,EACJuD,MAAOA,EACPE,OAAQA,EACRD,OAAQA,EACRE,eAAgBA,EAChB7C,MAAOA,EACP8C,QAASA,U,SCEdK,EAbE,WAAO,IACbC,EAAiBJ,qBAAWV,GAA5Bc,cASP,MAAO,CARI,uCAAG,WAAOjE,GAAP,SAAA+C,EAAA,sEACJ7E,EAASgG,WAAWlE,GADhB,OAEViE,GAAc,SAAAE,GAAG,4BAAQA,GAAR,CAAanE,OAFpB,2CAAH,sDAII,uCAAG,WAAOA,GAAP,SAAA+C,EAAA,sEACR7E,EAASkG,aAAapE,GADd,OAEdiE,GAAc,SAAAE,GAAG,OAAIA,EAAIE,QAAO,SAAAC,GAAG,OAAIA,IAAQtE,QAFjC,2CAAH,wDC0BJuE,EA7BC,WAAO,IACZ3E,EAAU4E,cAAV5E,OADW,EAEgBoB,oBAAS,GAFzB,mBAEX0B,EAFW,KAEAC,EAFA,OAGY3B,mBAAS,IAHrB,mBAGXnB,EAHW,KAGF4E,EAHE,OAIOT,IAJP,mBAIXnD,EAJW,KAIJ8C,EAJI,KAelB,GATAvC,qBAAU,WAAM,4CACZ,4BAAA2B,EAAA,sEAC4B7E,EAASwG,WAAW9E,GADhD,OACM+E,EADN,OAEEF,EAAWE,GACXhC,GAAa,GAHf,4CADY,uBAAC,WAAD,wBAMZ+B,KACC,CAAC9E,IAEF8C,EACA,OAAO,6CAhBO,IAkBXX,EAAqClC,EAArCkC,YAAaN,EAAwB5B,EAAxB4B,KAAMO,EAAkBnC,EAAlBmC,SAAU9B,EAAQL,EAARK,KACpC,OACI,yBAAKpC,UAAU,WACX,kBAAC,EAAD,CAAaiE,YAAaA,EAAanC,OAAQA,EAAQ6B,KAAMA,EAAMO,SAAUA,IAC7E,yBAAKlE,UAAU,aACb,kBAAC,EAAD,CAAUoC,KAAMA,EAAMW,MAAOA,EAAO8C,QAASA,OCf5CiB,G,OAXF,WAAO,IACThH,EAAeiG,qBAAWV,GAA1BvF,YACP,OACI,yBAAKE,UAAU,kBACX,wBAAIA,UAAU,aAAd,SACA,uBAAGA,UAAU,QAAb,0CACCF,EAAc,gBAAkB,QCQ9BiH,EAhBK,SAAC,GAAsE,IAAD,IAApEC,gBAAoE,MAA3D,GAA2D,MAAvDC,gBAAuD,MAA9C,GAA8C,MAA1CC,eAA0C,MAAlC,GAAkC,EAA9BtD,EAA8B,EAA9BA,MAAOuD,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAKvE,OACA,yBAAKpH,UAAU,eACVgH,EACD,4BAAQpD,MAAOA,EAAOE,SAPL,SAACN,GAClB2D,EAAO3D,EAAEO,OAAOH,OAChBwD,EAAU,KAMLF,EAAQ1C,KAAI,SAAA6C,GAAG,OAAI,4BAAQ3C,IAAK2C,EAAKzD,MAAOyD,GAAMA,OAEtDJ,ICEMK,G,OAZI,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAC/B,OACI,yBAAKzH,UAAU,aAAa0H,aAAW,cACnC,wBAAI1H,UAAU,cACV,wBAAIA,UAAU,aAAY,4BAAQA,UAAU,YAAYE,QAASsH,GAAvC,aAC1B,wBAAIxH,UAAU,aAAY,4BAAQA,UAAU,aAAauH,IACzD,wBAAIvH,UAAU,aAAY,4BAAQA,UAAU,YAAYE,QAASuH,GAAvC,aCO3BE,EAdO,WAAiB,IAAhBC,EAAe,uDAAP,GAAO,EACR1E,mBAAS,IADD,mBAC3B2E,EAD2B,KACpBC,EADoB,OAEV5E,mBAAS,GAFC,mBAE3BqE,EAF2B,KAErBQ,EAFqB,OAGO7E,mBAAS0E,GAHhB,mBAG3BI,EAH2B,KAGXC,EAHW,KAI5BT,EAAS,WACXO,GAAQ,SAAAR,GAAI,OAAIW,KAAKC,IAAIZ,EAAK,EAAG,OAE/BE,EAAY,WACdM,GAAQ,SAAAR,GAAI,OAAIW,KAAKE,IAAIb,EAAK,EAAGW,KAAKG,KAAKR,EAAMS,OAASN,QAG9D,MAAO,CAACH,EAAOC,EAAUP,EAAMQ,EAASC,EAAgBC,EAAgBT,EAAQC,ICyBrEc,EA9BF,WAAO,IAAD,EACmBrF,oBAAS,GAD5B,mBACR0B,EADQ,KACGC,EADH,OAE8E8C,EAAc,IAF5F,mBAERvF,EAFQ,KAEFoG,EAFE,KAEOjB,EAFP,KAEaQ,EAFb,KAEsBC,EAFtB,KAEsCS,EAFtC,KAEyDjB,EAFzD,KAEiEC,EAFjE,OAGqBvE,mBAAS,IAH9B,mBAGR6B,EAHQ,KAGIC,EAHJ,OAIUkB,IAJV,mBAIRnD,EAJQ,KAID8C,EAJC,KAiBf,OAVAvC,qBAAU,WAAM,4CACd,4BAAA2B,EAAA,sEAC2B7E,EAASsI,QAAQ,CAACvD,OAAOJ,IADpD,OACMK,EADN,OAEEoD,EAAQpD,GAFV,4CADc,uBAAC,WAAD,wBAKdsD,GACA7D,GAAa,GACbkD,EAAQ,KACP,CAAChD,EAAYyD,EAAST,IAErBnD,EACK,6CAGL,yBAAK5E,UAAU,kBACX,kBAAC,EAAD,CAAWiD,cAAe+B,IAC1B,kBAAC,EAAD,CAAU5C,KAAMA,EAAKuG,MAAMX,GAAgBT,EAAK,GAAIS,EAAeT,GAAOxE,MAAOA,EAAO8C,QAASA,IACjG,kBAAC,EAAD,CAAY0B,KAAMA,EAAMC,OAAQA,EAAQC,UAAWA,IACnD,kBAAC,EAAD,CAAaT,SAAS,WAAWC,SAAS,oBAAoBC,QAAS,CAAC,GAAG,GAAG,GAAG,KAAMtD,MAAOoE,EAAgBb,OAAQsB,EAAmBrB,UAAWW,M,wBCnBjJa,MAZf,YAA0C,IAAD,IAAzBlF,YAAyB,MAApB,SAAoB,MAAVmF,YAAU,MAAL,GAAK,EACrC,OACI,yBAAK7I,UAAS,sBAAiB0D,GAAQoF,KAAK,SACvCD,EAAKrE,KAAI,SAACuE,EAAKtE,GAAN,OACN,uBAAGC,IAAKD,EAAKzE,UAAU,SAClB+I,QCwHNC,EAxHD,WAAO,IACVC,EAAYlD,qBAAWV,GAAvB4D,SACDC,EAAUC,cAFA,EAGkBjG,oBAAS,GAH3B,mBAGTkG,EAHS,KAGEC,EAHF,OAKgBnG,mBADb,CAACtB,SAAS,GAAI0H,SAAS,GAAIC,WAAW,GAAIC,UAAU,GAAIC,MAAM,GAAIC,OAAO,KAJ5E,mBAKTC,EALS,KAKCC,EALD,KAMVC,EAAe,SAACrG,GAAO,IAAD,EACFA,EAAEO,OAAjBJ,EADiB,EACjBA,KAAMC,EADW,EACXA,MACbgG,GAAY,SAAA1I,GAAI,kCACTA,GADS,gBAEZwI,OAAQ,IACP/F,EAAOC,QAIVkG,EAAY,uCAAG,WAAOtG,GAAP,iBAAAyB,EAAA,yDACjBzB,EAAEC,iBADe,SAIakG,EAAnBD,OAAWxI,EAJL,YAIayI,EAJb,aAKVP,EALU,gCAMKhJ,EAAS2J,OAAO7I,GANrB,OAMTS,EANS,+CAQKvB,EAAS4J,MAAM9I,GARpB,QAQTS,EARS,eAUbsH,EAAStH,GACTuH,EAAQe,KAAK,KAXA,kDAabL,GAAY,SAAA1I,GAAI,kCACTA,GADS,IAEZwI,OAAM,UAfG,0DAAH,sDAoBlB,OACI,yBAAK1J,UAAU,mBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,yCACV,wBAAIA,UAAU,YACV,4BAAQA,UAAWoJ,EAAY,WAAa,kBAAmBlJ,QAAS,kBAAMmJ,GAAa,KAA3F,UAEJ,wBAAIrJ,UAAU,YACV,4BAAQA,UAAWoJ,EAAY,kBAAoB,WAAWlJ,QAAS,kBAAMmJ,GAAa,KAA1F,aAKZ,yBAAKrJ,UAAU,aACf,0BAAMuD,SAAUuG,GACZ,yBAAK9J,UAAU,cACX,2BAAOkK,QAAQ,YAAf,YACA,2BACAlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAAS/H,SAChBM,GAAG,WACHyB,KAAK,WACLE,YAAY,WACZC,SAAU+F,KAEd,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,YAAf,YACA,2BACIlK,UAAU,eACV0D,KAAK,WACLE,MAAO+F,EAASL,SAChBpH,GAAG,WACHyB,KAAK,WACLE,YAAY,WACZC,SAAU+F,KAEjBT,GACG,oCACA,yBAAKpJ,UAAU,cACX,2BAAOkK,QAAQ,cAAf,cACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASJ,WAChBrH,GAAG,aACHyB,KAAK,aACLE,YAAY,YACZC,SAAU+F,KAElB,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,aAAf,aACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASH,UAChBtH,GAAG,YACHyB,KAAK,YACLE,YAAY,aACZC,SAAU+F,KAElB,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,SAAf,iBACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASF,MAChBvH,GAAG,QACHyB,KAAK,QACLE,YAAY,2BACZC,SAAU+F,MAItB,4BAAQ7J,UAAU,gBAAgBoJ,EAAY,iBAAmB,WAEhEO,EAASD,OAAOpB,OAAS,EAAI,kBAAC,EAAD,CAAOO,KAAMc,EAASD,SAAY,SCjCrES,G,OAhFC,WAAO,IAAD,EACoBpE,qBAAWV,GAA1CvF,EADW,EACXA,YAAasK,EADF,EACEA,eACbb,EAAgCzJ,EAAhCyJ,WAAYC,EAAoB1J,EAApB0J,UAAWC,EAAS3J,EAAT2J,MAFZ,EAGcvG,mBAAS,CAACqG,aAAYC,YAAWC,QAAOH,SAAS,KAH/D,mBAGXK,EAHW,KAGDC,EAHC,KAIZC,EAAe,SAACrG,GAAO,IAAD,EACFA,EAAEO,OAAjBJ,EADiB,EACjBA,KAAMC,EADW,EACXA,MACbgG,GAAY,SAAA1I,GAAI,kCACTA,GADS,kBAEXyC,EAAOC,QAGVkG,EAAY,uCAAG,WAAOtG,GAAP,eAAAyB,EAAA,6DACjBzB,EAAEC,iBADe,SAEOrD,EAASiK,WAAWvK,EAAY8B,SAAU+H,GAFjD,OAEbW,EAFa,OAGjBF,GAAe,SAAAG,GAAQ,kCAChBA,GADgB,IAEnB1I,KAAMyI,OALO,2CAAH,sDAQlB,OACI,yBAAKtK,UAAU,0BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcF,EAAY8B,SAAxC,eACA,yBAAK5B,UAAU,aACX,0BAAMuD,SAAUuG,GACZ,yBAAK9J,UAAU,cACX,2BAAOkK,QAAQ,cAAf,cACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASJ,WAChBrH,GAAG,aACHyB,KAAK,aACLE,YAAY,YACZC,SAAU+F,KAElB,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,aAAf,aACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASH,UAChBtH,GAAG,YACHyB,KAAK,YACLE,YAAY,aACZC,SAAU+F,KAElB,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,SAAf,iBACA,2BACIlK,UAAU,eACV0D,KAAK,OACLE,MAAO+F,EAASF,MAChBvH,GAAG,QACHyB,KAAK,QACLE,YAAY,2BACZC,SAAU+F,KAElB,yBAAK7J,UAAU,cACX,2BAAOkK,QAAQ,YAAf,yBACA,2BACIlK,UAAU,eACV0D,KAAK,WACLE,MAAO+F,EAASL,SAChBpH,GAAG,WACHyB,KAAK,WACLE,YAAY,WACZC,SAAU+F,KAElB,4BAAQ7J,UAAU,mBAAlB,8BAGR,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,GAAG,iBAAgB,4BAAQD,UAAU,wBAAlB,mCChE9BwK,EAXM,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAEhC,OADsB5E,qBAAWV,GAA1BvF,YAKH,kBAAC,IAAD,CAAO2K,MAAOA,EAAOC,KAAMA,GAC1BC,GAJM,kBAAC,IAAD,CAAU1K,GAAG,YCUb2K,EAZM,WAAO,IACjB9K,EAAeiG,qBAAWV,GAA1BvF,YADgB,EAEEoG,IAFF,mBAEhBnD,EAFgB,KAET8C,EAFS,KAIvB,OACI,yBAAK7F,UAAU,+BACX,wBAAIA,UAAU,aAAd,wBACA,kBAAC,EAAD,CAAUoC,KAAMtC,EAAYsC,KAAMW,MAAOA,EAAO8C,QAASA,MC4BtDgF,EA7BA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UACd,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAcD,OAAK,EAACC,KAAK,cACrB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAcD,OAAK,EAACC,KAAK,sBACrB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAcD,OAAK,EAACC,KAAK,SACrB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAcD,OAAK,EAACC,KAAK,YACrB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAcD,OAAK,EAACC,KAAK,iBACrB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUzK,GAAG,QCTV6K,EAxBc,SAACpG,EAAKqG,GAAkB,IAAD,EACtB7H,oBAAS,WACjC,IAAIU,EACJ,IACEA,EAAQnD,KAAKC,MACXsK,OAAOrK,aAAaC,QAAQ8D,IAAQjE,KAAKwK,UAAUF,IAErD,MAAOvH,GACP3C,QAAQqK,IAAI1H,GACZI,EAAQmH,EAEV,OAAOnH,KAXuC,mBACzCvB,EADyC,KAClC8I,EADkC,KAqBhD,OARA7H,qBAAU,WACJjB,EAGF1B,aAAayK,QAAQ1G,EAAKjE,KAAKwK,UAAU5I,IAFzC1B,aAAa0K,WAAW3G,KAIzB,CAACA,EAAKrC,IAEF,CAACA,EAAO8I,I,OC4BJG,MA1Cf,WAAgB,IAAD,EACyBpI,mBAAS,MADlC,mBACNpD,EADM,KACOsK,EADP,OAEuBlH,mBAAS,IAFhC,mBAEN4C,EAFM,KAEMK,EAFN,OAGqBjD,oBAAS,GAH9B,mBAGN0B,EAHM,KAGKC,EAHL,OAIaiG,EAAqB,QAAS,IAJ3C,mBAINnJ,EAJM,KAICsH,EAJD,KA0Bb,OArBA3F,qBAAW,WACT,IAAMiI,EAAgB,uCAAG,gCAAAtG,EAAA,wEAEJuG,iBAAO7J,GAAnBC,EAFgB,EAEhBA,SAFgB,SAGFxB,EAASqL,QAAQ7J,GAHf,OAGfC,EAHe,OAIrBuI,EAAevI,GACfsE,EAActE,EAAKO,KAAKoC,KAAI,SAAArC,GAAG,OAAIA,EAAID,OALlB,gDAOrBkI,EAAe,MACfjE,EAAc,IARO,QAUvBtB,GAAa,GAVU,yDAAH,qDAYpBA,GAAa,GACb0G,MACD,CAAC5J,IAMDiD,EAEC,kDAKF,kBAAC,EAAY8G,SAAb,CAAsB9H,MAAO,CAAC9D,cAAasK,iBAAgBnB,WAAUnD,aAAYK,kBAC/E,yBAAKnG,UAAU,gBACb,kBAAC,EAAD,CAAYF,YAAaA,EAAaC,OAd7B,WACbqK,EAAe,MACfjE,EAAc,IACd8C,EAAS,OAYL,kBAAC,EAAD,SCjCY0C,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvL,GACLN,QAAQM,MAAMA,EAAME,c","file":"static/js/main.0d208069.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/office_icon.1e722c48.png\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './Navigation.css';\n\n\nconst Navigation = ({currentUser, logout}) => {\n    const loggedInNav = () => {\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/companies\">Companies</NavLink></li>\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/jobs\">Jobs</NavLink></li>\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/profile\">Profile</NavLink></li>\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/applications\">My Applications</NavLink></li>\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/\" onClick={logout}>Logout</NavLink></li>\n            </ul>\n        )\n    }\n    const loggedOutNav = () => {\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\"><NavLink className=\"Navigation-link\" to=\"/login\">Login</NavLink></li>\n            </ul>\n        )\n    }\n\n    return (\n        <nav className=\"Navigation navbar-expand navbar navbar-dark bg-primary\">\n            <NavLink className=\"Navigation-link navbar-brand\" to=\"/\">Jobly</NavLink>\n            {currentUser ? loggedInNav() : loggedOutNav()}\n        </nav>\n    )\n}\n\nexport default Navigation;","import axios from 'axios';\nimport config from './config';\nconst DATABASE_URL = config.DATABASE_URL || 'https://localhost:3001';\n\nclass JoblyApi {\n    static async request(endpoint, paramsOrData = {}, verb = \"get\") {\n      paramsOrData._token = JSON.parse(localStorage.getItem('token'));\n  \n      console.debug(\"API Call:\", endpoint, paramsOrData, verb);\n  \n      try {\n        return (await axios({\n          method: verb,\n          url: `${DATABASE_URL}/${endpoint}`,\n          [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData})).data;\n          // axios sends query string data via the \"params\" key,\n          // and request body data via the \"data\" key,\n          // so the key we need depends on the HTTP verb\n      }\n  \n      catch(err) {\n        console.error(\"API Error:\", err.response);\n        let message = err.response.data.message;\n        throw Array.isArray(message) ? message : [message];\n      }\n    }\n    static async signup(data) {\n        let res = await this.request(`users`, data, \"post\");\n        return res.token;\n      }\n    static async login(data) {\n        let res = await this.request(`login`, data, \"post\");\n        return res.token;\n      }\n    static async getUser(username) {\n        let res = await this.request(`users/${username}`);\n        return res.user;\n    }\n    static async updateUser(username, data) {\n        let res = await this.request(`users/${username}`, data, 'patch');\n        return res.user;\n    }\n    static async getCompany(handle) {\n      let res = await this.request(`companies/${handle}`);\n      return res.company;\n    }\n    static async getCompanies(params={}) {\n        let res = await this.request('companies', params);\n        return res.companies;\n    }\n    static async getJob(id) {\n        let res = await this.request(`jobs/${id}`);\n        return res.job;\n      }\n    static async getJobs(params={}) {\n        let res = await this.request('jobs', params);\n        return res.jobs;\n    }\n    static async applyToJob(id) {\n        let res = await this.request(`jobs/${id}/apply`, {state:'applied'}, 'post');\n        return res.message;\n    }\n    static async unApplyToJob(id) {\n        let res = await this.request(`jobs/${id}/apply`, {}, 'delete');\n        return res.message;\n    }\n  }\n\nexport default JoblyApi;","const config = {\n    DATABASE_URL:'https://jobly-jt-0520.herokuapp.com'\n}\n\n\nexport default config;","import {useRef} from 'react';\nconst useDebounce = (func, delay=1000) => {\n    const timerRef = useRef();\n\n    return (...args) => {\n        if (timerRef.current){\n            clearTimeout(timerRef.current);\n        }\n        timerRef.current = setTimeout(() => {\n            func.apply(null, args);\n        }, delay)\n    };\n}\n\nexport default useDebounce;","import React, {useState, useEffect} from 'react';\nimport './Searchbox.css';\nimport useDebounce from './hooks/useDebounce'\n\nconst Searchbox = ({filterResults}) => {\n    const [term, setTerm] = useState(\"\")\n    const debouncedFilter = useDebounce(filterResults, 500);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n    const handleChange = (e) => {\n        setTerm(e.target.value);\n    }\n\n    useEffect(() => {\n        debouncedFilter(term)\n    },[term, debouncedFilter]);\n\n    return (\n        <form className=\"Searchbox form-inline mt-3\" onSubmit={handleSubmit}>\n            <input className=\"form-control form-control-lg flex-grow-1\" \n                type=\"search\" \n                name=\"search\"\n                value={term}\n                placeholder=\"Search...\" \n                onChange={handleChange}/>\n        </form>\n    )\n}\nexport default Searchbox;\n","import React from 'react';\nimport officeIcon from './office_icon.png';\nimport './CompanyCard.css';\n\nconst CompanyCard = ({description, name, logo_url}) => {\n    const img = <img className=\"img-thumbnail ml-auto\" src={logo_url ? logo_url : officeIcon} alt={name} />;\n    return (\n        <div className=\"CompanyCard card p-2 mb-1\">\n            <h5 className=\"card-title\">{name}</h5>\n            {img}\n            <p className=\"card-text\">{description}</p>\n        </div>\n    )\n}\n\nexport default CompanyCard;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport CompanyCard from './CompanyCard';\n\nconst CompanyList = ({companies}) => {\n    return (\n        <ul className=\"CompanyList list-unstyled\">\n            {companies.map(({description, logo_url, handle, name}, idx) => \n            <li key={idx}>\n                <Link to={`/companies/${handle}`}>\n                    <CompanyCard \n                        description={description} \n                        logo_url={logo_url} \n                        name={name}/>\n                </Link>\n            </li>)}\n        </ul>\n    )\n}\n\nexport default CompanyList;","import React, {useState, useEffect} from 'react';\nimport JoblyApi from './JoblyApi';\nimport Searchbox from './Searchbox';\nimport CompanyList from './CompanyList';\n\nconst Companies = () => {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [companies, setCompanies] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    useEffect(() => {\n      async function getCompanies() {\n        let allCompanies = await JoblyApi.getCompanies({search:searchTerm});\n        setCompanies(allCompanies);\n      }\n      getCompanies();\n      setIsLoading(false);\n    }, [searchTerm]);\n    if (isLoading) {\n      return <p>Loading &hellip;</p>;\n    }\n\n    return (\n        <div className=\"Companies container\">\n            <Searchbox filterResults={setSearchTerm}/>\n            <CompanyList companies={companies}/>\n        </div>\n    )\n}\n\nexport default Companies;","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserContext from './userContext';\n\nconst JobCard = ({id, title, equity, salary, company_handle, apply, unapply}) => {\n    const {appliedIds} = useContext(UserContext);\n    const applyButton = () => {\n        return <button className=\"btn btn-success ml-auto\" onClick={() => apply(id)}>Apply</button>\n    }\n    const unApplyButton = () => {\n        return <button className=\"btn btn-danger ml-auto\" onClick={() => unapply(id)}>Remove Application</button>\n    }\n    return (\n        <div className=\"CompanyCard card p-2 mb-1\">\n            <h5 className=\"card-title\">{title}</h5>\n            {company_handle ? <h6 className=\"card-subtitle mb-2 text-muted\"><Link to={`/companies/${company_handle}`}>(@{company_handle})</Link></h6> : null}\n            <p className=\"card-text\">\n                {salary ? <span>Salary: {salary}</span> : null}\n                <br/>\n                {equity ? <span>Equity: {equity}</span> : null}\n            </p>\n            {appliedIds.includes(id) ? unApplyButton() : applyButton()}\n        </div>\n    )\n}\n\nexport default JobCard;\n\n","import React from 'react';\nimport JobCard from './JobCard';\n\nconst JobsList = ({jobs, apply, unapply}) => {\n    return (\n        <ul className=\"JobsList list-unstyled\">\n            {jobs.map(({id, title, salary, equity, company_handle}) => \n            <li key={id}>\n                <JobCard \n                    id={id} \n                    title={title} \n                    salary={salary} \n                    equity={equity} \n                    company_handle={company_handle} \n                    apply={apply} \n                    unapply={unapply}/>\n            </li>)}\n        </ul>\n    )\n}\n\nexport default JobsList;","import {useContext} from 'react';\nimport UserContext from '../userContext';\nimport JoblyApi from '../JoblyApi';\n\nconst useApply = () => {\n    const {setAppliedIds} = useContext(UserContext);\n    const apply = async (id) => {\n        await JoblyApi.applyToJob(id);\n        setAppliedIds(ids => [...ids, id]);\n      }\n      const unapply = async (id) => {\n        await JoblyApi.unApplyToJob(id);\n        setAppliedIds(ids => ids.filter(num => num !== id));\n      }  \n    return [apply, unapply]\n}\n\nexport default useApply;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport JoblyApi from './JoblyApi';\nimport JobsList from './JobsList';\nimport CompanyCard from './CompanyCard';\nimport useApply from './hooks/useApply';\n\nconst Company = () => {\n    const {handle} = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const [company, setCompany] = useState({});\n    const [apply, unapply] = useApply();\n\n    useEffect(() => {\n        async function getCompany() {\n          let targetCompany = await JoblyApi.getCompany(handle);\n          setCompany(targetCompany);\n          setIsLoading(false);\n        }\n        getCompany();\n      }, [handle]);\n\n    if (isLoading) {\n        return <p>Loading &hellip;</p>;\n    }\n    const {description, name, logo_url, jobs} = company;\n    return (\n        <div className=\"Company\">\n            <CompanyCard description={description} handle={handle} name={name} logo_url={logo_url} />\n            <div className=\"container\">\n              <JobsList jobs={jobs} apply={apply} unapply={unapply}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Company;","import React, {useContext} from 'react';\nimport UserContext from './userContext';\nimport './Home.css';\n\nconst Home = () => {\n    const {currentUser} = useContext(UserContext);\n    return (\n        <div className=\"Home jumbotron\">\n            <h1 className=\"display-4\">Jobly</h1>\n            <p className=\"lead\">All the jobs in one, convenient place.</p>\n            {currentUser ? 'Welcome Back!' : null}\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst SelectField = ({headDesc='', tailDesc='', options=[], value, action, subaction}) => {\n    const handleChange = (e) => {\n        action(e.target.value);\n        subaction(1);\n    }\n    return (\n    <div className=\"SelectField\">\n        {headDesc}\n        <select value={value} onChange={handleChange}>\n            {options.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n        </select>\n        {tailDesc}\n    </div>\n    )\n}\n\nexport default SelectField;","import React from 'react';\nimport './Pagination.css';\n\nconst Pagination = ({page, goBack, goForward}) => {\n    return (\n        <nav className=\"Pagination\" aria-label=\"Pagination\">\n            <ul className=\"pagination\">\n                <li className=\"page-item\"><button className=\"page-link\" onClick={goBack}>Previous</button></li>\n                <li className=\"page-item\"><button className=\"page-link\">{page}</button></li>\n                <li className=\"page-item\"><button className=\"page-link\" onClick={goForward}>Next</button></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Pagination;","import {useState} from 'react';\n\nconst usePagination = (perPage=20) => {\n    const [items, setItems] = useState([]);;\n    const [page, setPage] = useState(1);\n    const [resultsPerPage, setResultsPage] = useState(perPage);\n    const goBack = () => {\n        setPage(page => Math.max(page-1, 1));\n    }\n    const goForward = () => {\n        setPage(page => Math.min(page+1, Math.ceil(items.length / resultsPerPage)));\n    }\n\n    return [items, setItems, page, setPage, resultsPerPage, setResultsPage, goBack, goForward];\n}\n\nexport default usePagination;","import React, {useState, useEffect} from 'react';\nimport Searchbox from './Searchbox';\nimport JoblyApi from './JoblyApi';\nimport JobsList from './JobsList';\nimport SelectField from './SelectField';\nimport Pagination from './Pagination';\nimport usePagination from './hooks/usePagination';\nimport useApply from './hooks/useApply';\nconst Jobs = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [jobs, setJobs, page, setPage, resultsPerPage, setResultsPerPage, goBack, goForward] = usePagination(20);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [apply, unapply] = useApply();\n\n\n    useEffect(() => {\n      async function getJobs() {\n        let allCompanies = await JoblyApi.getJobs({search:searchTerm});\n        setJobs(allCompanies);\n      }\n      getJobs();\n      setIsLoading(false);\n      setPage(1);\n    }, [searchTerm, setJobs, setPage]);\n\n    if (isLoading) {\n      return <p>Loading &hellip;</p>;\n    }\n    return (\n        <div className=\"Jobs container\">\n            <Searchbox filterResults={setSearchTerm}/>\n            <JobsList jobs={jobs.slice(resultsPerPage*(page-1), resultsPerPage*page)} apply={apply} unapply={unapply}/>\n            <Pagination page={page} goBack={goBack} goForward={goForward}/>\n            <SelectField headDesc='Show me ' tailDesc=' results per page' options={[10,20,50,100]} value={resultsPerPage} action={setResultsPerPage} subaction={setPage} />\n        </div>\n    )\n}\n\nexport default Jobs;","import React from 'react';\n\nfunction Alert({type=\"danger\", msgs=[]}) {\n    return (\n        <div className={`alert alert-${type}`} role=\"alert\">\n            {msgs.map((msg, idx) => (\n                <p key={idx} className=\"small\">\n                    {msg}\n                </p>\n            ))}\n        </div>\n    );\n}\n\nexport default Alert;","import React, {useState, useContext} from 'react';\nimport JoblyApi from './JoblyApi';\nimport {useHistory} from 'react-router-dom';\nimport UserContext from './userContext';\nimport './Login.css';\nimport Alert from './Alert';\n\nconst Login = () => {\n    const {setToken} = useContext(UserContext);\n    const history = useHistory();\n    const [isNewUser, setIsNewUser] = useState(false);\n    const BASE_STATE = {username:'', password:'', first_name:'', last_name:'', email:'', errors:[]};\n    const [formData, setFormData] = useState(BASE_STATE);\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            errors: [],\n            [name]: value\n\n        }));\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let token;\n        try{\n            const {errors, ...data} = formData;\n            if(isNewUser){\n                token = await JoblyApi.signup(data);\n            } else{\n                token = await JoblyApi.login(data);\n            }\n            setToken(token);\n            history.push('/');\n        } catch (errors){\n            setFormData(data => ({\n                ...data,\n                errors\n            }));\n        }\n\n    }\n    return (\n        <div className=\"Login container\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <ul className=\"nav nav-tabs card-header-tabs ml-auto\">\n                        <li className=\"nav-item\">\n                            <button className={isNewUser ? 'nav-link' : 'nav-link active'} onClick={() => setIsNewUser(false)}>Login</button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button className={isNewUser ? 'nav-link active' : 'nav-link'}onClick={() => setIsNewUser(true)}>Signup</button>\n                        </li>\n\n                    </ul>\n                </div>\n                <div className=\"card-body\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                        className=\"form-control\" \n                        type=\"text\" \n                        value={formData.username}\n                        id=\"username\" \n                        name=\"username\" \n                        placeholder=\"Username\" \n                        onChange={handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input \n                            className=\"form-control\"\n                            type=\"password\" \n                            value={formData.password} \n                            id=\"password\"\n                            name=\"password\" \n                            placeholder=\"Password\" \n                            onChange={handleChange}/>\n                    </div>\n                    {isNewUser && \n                        <>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"first_name\">First Name</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.first_name} \n                                id=\"first_name\"\n                                name=\"first_name\" \n                                placeholder=\"e.g. John\" \n                                onChange={handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"last_name\">Last Name</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.last_name} \n                                id=\"last_name\"\n                                name=\"last_name\" \n                                placeholder=\"e.g. Smith\" \n                                onChange={handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email Address</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.email} \n                                id=\"email\"\n                                name=\"email\" \n                                placeholder=\"e.g. johnsmith@gmail.com\" \n                                onChange={handleChange}/>\n                        </div>\n                        </>\n                    }\n                    <button className=\"btn btn-info\">{isNewUser ? 'Create Account' : 'Log in'}</button>\n                </form>\n                    {formData.errors.length > 0 ? <Alert msgs={formData.errors}/> : null }\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Login;\n\n","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport UserContext from './userContext';\nimport JoblyApi from './JoblyApi';\nimport './Profile.css';\n\nconst Profile = () => {\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    const {first_name, last_name, email} = currentUser;\n    const [formData, setFormData] = useState({first_name, last_name, email, password:''})\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }));\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let updatedUser = await JoblyApi.updateUser(currentUser.username, formData);\n        setCurrentUser(currUser => ({\n            ...currUser,\n            user: updatedUser\n        }))\n    } \n    return (\n        <div className=\"Profile container mt-3\">\n            <div className=\"card pt-2\">\n                <h4 className=\"card-title\">{currentUser.username}'s Profile:</h4>\n                <div className=\"card-body\">\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"first_name\">First Name</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.first_name} \n                                id=\"first_name\"\n                                name=\"first_name\" \n                                placeholder=\"e.g. John\" \n                                onChange={handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"last_name\">Last Name</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.last_name} \n                                id=\"last_name\"\n                                name=\"last_name\" \n                                placeholder=\"e.g. Smith\" \n                                onChange={handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email Address</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"text\" \n                                value={formData.email} \n                                id=\"email\"\n                                name=\"email\" \n                                placeholder=\"e.g. johnsmith@gmail.com\" \n                                onChange={handleChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Confirm with Password</label>\n                            <input \n                                className=\"form-control\"\n                                type=\"password\" \n                                value={formData.password} \n                                id=\"password\"\n                                name=\"password\" \n                                placeholder=\"Password\" \n                                onChange={handleChange}/>\n                        </div>\n                        <button className=\"btn btn-success\">Save Updated Information</button>\n                    </form>\n                </div>\n                <div className=\"card-footer\">\n                    <Link to=\"/applications\"><button className=\"btn btn-outline-info\">View current applications</button></Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import React, {useContext} from 'react';\nimport UserContext from './userContext';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({exact, path, children}) => {\n    const {currentUser} = useContext(UserContext);\n    if(!currentUser){\n        return <Redirect to=\"/login\"></Redirect>\n    }\n    return (\n        <Route exact={exact} path={path}>\n        {children}\n        </Route>\n    )\n}\nexport default PrivateRoute;","import React, {useContext} from 'react';\nimport JobsList from './JobsList';\nimport UserContext from './userContext';\nimport useApply from './hooks/useApply';\n\nconst Applications = () => {\n    const {currentUser} = useContext(UserContext);\n    const [apply, unapply] = useApply();\n\n    return (\n        <div className=\"Applications container mt-4\">\n            <h2 className=\"display-5\">Current Applications</h2>\n            <JobsList jobs={currentUser.jobs} apply={apply} unapply={unapply}/>\n        </div>\n    )\n}\n\nexport default Applications;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Companies from './Companies';\nimport Company from './Company';\nimport Home from './Home';\nimport Jobs from './Jobs';\nimport Login from './Login';\nimport Profile from './Profile';\nimport PrivateRoute from './PrivateRoute';\nimport Applications from './Applications';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route exact path=\"/login\">\n                <Login />\n            </Route>\n            <PrivateRoute exact path=\"/companies\">\n                <Companies />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/companies/:handle\">\n                <Company />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/jobs\">\n                <Jobs />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/profile\">\n                <Profile />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/applications\">\n                <Applications />\n            </PrivateRoute>\n            <Redirect to=\"/\" />\n        </Switch>\n    )\n}\n\nexport default Routes;","import {useState, useEffect} from 'react';\n\nconst useLocalStorageState = (key, defaultValue) => {\n    const [state, setState] = useState(() => {\n      let value\n      try {\n        value = JSON.parse(\n          window.localStorage.getItem(key) || JSON.stringify(defaultValue)\n        )\n      } catch (e) {\n        console.log(e)\n        value = defaultValue;\n      }\n      return value;\n    })\n    useEffect(() => {\n      if(!state){\n        localStorage.removeItem(key);\n      } else{\n        localStorage.setItem(key, JSON.stringify(state))\n      }\n    }, [key, state])\n  \n    return [state, setState];\n  }\n\nexport default useLocalStorageState;","import React, {useEffect, useState} from 'react';\nimport { decode } from 'jsonwebtoken';\nimport Navigation from './Navigation';\nimport JoblyApi from './JoblyApi';\nimport Routes from './Routes';\nimport useLocalStorageState from './hooks/useLocalStorageState';\nimport UserContext from './userContext';\nimport './App.css';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [appliedIds, setAppliedIds] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [token, setToken] = useLocalStorageState('token', {});\n  useEffect( () => {\n    const fetchUserDetails = async () => {\n      try {\n        let {username} = decode(token);\n        const user = await JoblyApi.getUser(username);\n        setCurrentUser(user);\n        setAppliedIds(user.jobs.map(job => job.id));\n      } catch (err) {\n        setCurrentUser(null);\n        setAppliedIds([]);\n      }\n      setIsLoading(false);\n    }\n      setIsLoading(true);\n      fetchUserDetails();\n  }, [token])\n  const logout = () => {\n    setCurrentUser(null);\n    setAppliedIds([]);\n    setToken('');\n  }\n  if(isLoading){\n    return (\n      <div>Loading your data</div>\n    )\n  }\n\n  return (\n    <UserContext.Provider value={{currentUser, setCurrentUser, setToken, appliedIds, setAppliedIds}}>\n      <div className=\"App bg-light\">\n        <Navigation currentUser={currentUser} logout={logout}/>\n        <Routes />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}